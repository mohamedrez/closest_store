<?php


// calculating the distance between two lat/long points
function distance($a, $b)
{
    list($lat1, $lon1) = $a;
    list($lat2, $lon2) = $b;

    $theta = $lon1 - $lon2;
    $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
    $dist = acos($dist);
    $dist = rad2deg($dist);
    $miles = $dist * 60 * 1.1515;
    return $miles;
}

function get_stores()
{	
	// pulling the entites ("stores") information from the database  **  to be cached 
	$query = new EntityFieldQuery();
	$query
	 ->entityCondition("entity_type", "node")
	 ->entityCondition("bundle", "store")
	 ->propertyCondition("status", 1);

	 $result = $query->execute();
	 $nids = array_keys($result["node"]);
	 $stores = node_load_multiple($nids);

// list containig the stores iformation 	 
	 $items = array();
	 foreach ($stores as $key => $value) {
	 	$items[] = array($value->title,$value->body,$value->field_location["und"][0]["lat"],$value->field_location["und"][0]["lon"]);
	 }
	 return $items;
}



function closest_store_menu()
{
	$items['closest/store'] = array(
		'page callback' => 'closest_store',
		'page arguments' => array(2,3),
		'access arguments' => array('access content')
		);
	return $items;
}

function closest_store($lat,$long)
{
	// current position of the device with gps 
	$ref = array($lat,$long);


	$items = get_stores();
	$distances = array_map(function($item) use($ref) {
	    $a = array_slice($item, -2);
	    return distance($a, $ref);
	}, $items);

	asort($distances);
	$json_output = drupal_json_output($items[key($distances)]);
	drupal_exit();
	return $json_output;
}